version: '3'

vars:
  BINARY_NAME: go-service
  BUILD_DIR: build

tasks:
  build:
    desc: Build the service binary for current platform
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - go build -v -ldflags "-s -w" -o {{.BUILD_DIR}}/{{.BINARY_NAME}} ./cmd/service

  build:windows:
    desc: Build for Windows
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - GOOS=windows GOARCH=amd64 go build -v -ldflags "-s -w" -o {{.BUILD_DIR}}/{{.BINARY_NAME}}.exe ./cmd/service

  build:linux:
    desc: Build for Linux
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - GOOS=linux GOARCH=amd64 go build -v -ldflags "-s -w" -o {{.BUILD_DIR}}/{{.BINARY_NAME}} ./cmd/service

  build:darwin:
    desc: Build for macOS
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - GOOS=darwin GOARCH=amd64 go build -v -ldflags "-s -w" -o {{.BUILD_DIR}}/{{.BINARY_NAME}} ./cmd/service

  build:all:
    desc: Build for all platforms
    cmds:
      - task: build:windows
      - task: build:linux
      - task: build:darwin

  install:
    desc: Install the service
    deps: [build]
    cmds:
      - sudo ./{{.BUILD_DIR}}/{{.BINARY_NAME}} -install

  uninstall:
    desc: Uninstall the service
    cmds:
      - sudo ./{{.BUILD_DIR}}/{{.BINARY_NAME}} -uninstall

  start:
    desc: Start the service
    cmds:
      - sudo ./{{.BUILD_DIR}}/{{.BINARY_NAME}} -start

  stop:
    desc: Stop the service
    cmds:
      - sudo ./{{.BUILD_DIR}}/{{.BINARY_NAME}} -stop

  status:
    desc: Check service status
    cmds:
      - ./{{.BUILD_DIR}}/{{.BINARY_NAME}} -status

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.BUILD_DIR}}

  default:
    desc: Show available tasks
    cmds:
      - task --list